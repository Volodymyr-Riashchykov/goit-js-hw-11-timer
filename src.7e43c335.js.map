{"version":3,"sources":["index.js"],"names":["CountdownTimer","targetDate","Date","indicationTime","document","querySelector","innerHTML","intervalId","setInterval","currentTime","time","clearInterval","timeText","days","Math","floor","textContent","String","padStart","hours","mins","secs","countdownTimer","selector","startTimer"],"mappings":";AA4DA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5DMA,IAAAA,EAAAA,WAC2B,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACpBA,KAAAA,WAAa,IAAIC,KAAKD,GACtBE,KAAAA,iBACLC,SAASC,cAAc,QAAQC,WAA/B,sSAwDR,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAvCI,MAAA,WAAa,IAAA,EAAA,KACJC,KAAAA,WAAaC,YAAY,WAC1B,EAAKL,kBACN,OAoCX,CAAA,IAAA,iBAjCI,MAAA,WACSM,KAAAA,YAAc,IAAIP,KAClBQ,KAAAA,KAAO,KAAKT,WAAa,KAAKQ,YAC/B,KAAKC,KAAO,IACZC,cAAc,KAAKJ,YACdG,KAAAA,KAAO,GAEXE,KAAAA,aA0Bb,CAAA,IAAA,WAvBI,MAAA,WACSC,KAAAA,KAAOC,KAAKC,MAAM,KAAKL,KAAQ,OACpCN,SAASC,cAAc,sBAAsBW,YAAcC,OAAO,KAAKJ,MAAMK,SAAS,EAAG,KAEpFC,KAAAA,MAAQL,KAAKC,MACb,KAAKL,KAAQ,MAAyB,MAE3CN,SAASC,cAAc,uBAAuBW,YAAcC,OAAO,KAAKE,OAAOD,SAAS,EAAG,KAEtFE,KAAAA,KAAON,KAAKC,MACZ,KAAKL,KAAQ,KAAoB,KAEtCN,SAASC,cAAc,sBAAsBW,YAAcC,OAAO,KAAKG,MAAMF,SAAS,EAAG,KAEpFG,KAAAA,KAAOP,KAAKC,MAAO,KAAKL,KAAQ,IAAc,KACnDN,SAASC,cAAc,sBAAsBW,YAAcC,OAAO,KAAKI,MAAMH,SAAS,EAAG,SAQjG,EA5DMlB,GAuDAsB,EAAiB,IAAItB,EAAe,CACtCuB,SAAU,WACVtB,WAAY,4BAEhBqB,EAAeE","file":"src.7e43c335.js","sourceRoot":"..\\src","sourcesContent":["class CountdownTimer {\r\n    constructor({  targetDate }) {\r\n        this.targetDate = new Date(targetDate);\r\n        this.indicationTime();\r\n        document.querySelector('head').innerHTML += `<style>\r\n      .timer {\r\n        display: flex;\r\n        font-size: 1.5em;\r\n      }\r\n      .field {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        padding-right: 40px;\r\n      }\r\n      .value {\r\n        font-size: 4.5em;\r\n      }\r\n    </style>`;\r\n    }\r\n\r\n    startTimer() {\r\n        this.intervalId = setInterval(() => {\r\n            this.indicationTime();\r\n        }, 1000);\r\n    }\r\n\r\n    indicationTime() {\r\n        this.currentTime = new Date();\r\n        this.time = this.targetDate - this.currentTime;\r\n        if (this.time < 0) {\r\n            clearInterval(this.intervalId);\r\n            this.time = 0;\r\n        }\r\n        this.timeText();\r\n    }\r\n\r\n    timeText() {\r\n        this.days = Math.floor(this.time / (1000 * 60 * 60 * 24));\r\n        document.querySelector(' [data-value=days]').textContent = String(this.days).padStart(2, '0');\r\n\r\n        this.hours = Math.floor(\r\n            (this.time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n        );\r\n        document.querySelector(' [data-value=hours]').textContent = String(this.hours).padStart(2, '0');\r\n\r\n        this.mins = Math.floor(\r\n            (this.time % (1000 * 60 * 60)) / (1000 * 60),\r\n        );\r\n        document.querySelector(' [data-value=mins]').textContent = String(this.mins).padStart(2, '0');\r\n\r\n        this.secs = Math.floor((this.time % (1000 * 60)) / 1000);\r\n        document.querySelector(' [data-value=secs]').textContent = String(this.secs).padStart(2, '0')\r\n    }\r\n}\r\nconst countdownTimer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: 'october 21, 2021, 15:49',\r\n});\r\ncountdownTimer.startTimer();\r\n//"]}